// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package queue.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import queue.helpers.ExceptionGenerator;

/**
 * User can throw an exception (give an error) when a Job is executed unsuccessfully. When used in the microflow, the status of the Job is set to error. If retries are left, the Job will be executed again after the specified delay.
 * 
 * When using stack traces, please take performance into account. Stack traces can significantly slow down the application and fiill log files when used often.
 */
public class SetErrorForJob extends CustomJavaAction<java.lang.Boolean>
{
	private java.lang.Boolean includeStacktrace;
	private java.lang.String message;

	public SetErrorForJob(IContext context, java.lang.Boolean includeStacktrace, java.lang.String message)
	{
		super(context);
		this.includeStacktrace = includeStacktrace;
		this.message = message;
	}

	@Override
	public java.lang.Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		ExceptionGenerator exceptionGenerator = new ExceptionGenerator();
		exceptionGenerator.throwException(includeStacktrace, message);
		return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public java.lang.String toString()
	{
		return "SetErrorForJob";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
